<?xml version="1.0" encoding="UTF-8"?>
<!--
  ============LICENSE_START=======================================================
  ONAP CLAMP
  ================================================================================
  Copyright (C) 2017-2020 AT&T Intellectual Property. All rights
                              reserved.
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ============LICENSE_END============================================
  ===================================================================
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.onap.clamp</groupId>
	<artifactId>clds</artifactId>
	<version>5.0.3-SNAPSHOT</version>
	<name>clamp-dashboard</name>


	<parent>
		<groupId>org.onap.oparent</groupId>
		<artifactId>oparent</artifactId>
		<version>2.1.0</version>
	</parent>

	<description>
	       This is the MAVEN project that builds the  Control Loop dashboard for ONAP CLAMP.
	       Docker engine is normally requires to perfom all possible tasks (including integration tests)
	       
           It can build:
           - The DOCKER images for:
                * The dashboard - Elastic search
                * The dashboard - Logstash
                * The dashboard - Kibana

           Useful mvn commands:
            - mvn clean install -DskipTests -P docker: Build Clamp backend JAR + all docker images

           To start CLAMP (Build it before):
            - Use docker-compose file in ./extra/docker/clamp/docker-compose.yml

        </description>

	<properties>
		<maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
		<clamp.project.version>${project.version}</clamp.project.version>
		<clamp.build.timestamp>${maven.build.timestamp}</clamp.build.timestamp>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<docker.push.registry>localhost:5000</docker.push.registry>
		<docker.pull.registry>nexus3.onap.org:10001</docker.pull.registry>
		<docker.skip.build>true</docker.skip.build>
		<docker.skip.push>true</docker.skip.push>
		<docker.skip.tag>true</docker.skip.tag>
		<skip.staging.artifacts>false</skip.staging.artifacts>
		<python.http.proxy.param />
	</properties>

	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<skip.staging.artifacts>true</skip.staging.artifacts>
				<docker.skip.build>false</docker.skip.build>
				<docker.skip.tag>false</docker.skip.tag>
				<docker.skip.push>false</docker.skip.push>
				<docker.skip>false</docker.skip>
			</properties>
		</profile>
	</profiles>

	<distributionManagement>
		<repository>
			<id>ecomp-releases</id>
			<name>Clamp Release Repository</name>
			<url>https://nexus.onap.org/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>ecomp-snapshots</id>
			<name>Clamp Snapshot Repository</name>
			<url>https://nexus.onap.org/content/repositories/snapshots/</url>
		</snapshotRepository>
		<site>
			<id>ecomp-site</id>
			<url>dav:https://nexus.onap.org/content/sites/site/org/onap/clamp/${project.version}</url>
		</site>
	</distributionManagement>

	<repositories>
		<repository>
			<id>onap-public</id>
			<name>onap-public</name>
			<url>https://nexus.onap.org/content/repositories/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>ecomp-releases</id>
			<name>ONAP Release Repository</name>
			<url>https://nexus.onap.org/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>ecomp-staging</id>
			<name>ONAP Staging Repository</name>
			<url>https://nexus.onap.org/content/repositories/staging/</url>
		</repository>
		<repository>
			<id>ecomp-snapshots</id>
			<name>ONAP Snapshot Repository</name>
			<url>https://nexus.onap.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>onap-public</id>
			<name>onap-public</name>
			<url>https://nexus.onap.org/content/repositories/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>

	</dependencyManagement>

	<dependencies>

	</dependencies>

	<build>
		<finalName>clamp-cl-dashboard</finalName>

		<resources>

		</resources>

		<plugins>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.31.0</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpclient</artifactId>
						<version>4.5.5</version>
					</dependency>
				</dependencies>
				<configuration>
					<verbose>true</verbose>
					<apiVersion>1.35</apiVersion>
					<images>

						<image>
							<name>onap/clamp-dashboard-logstash</name>
							<alias>onap-clamp-dashboard-logstash</alias>
							<run>
								<skip>true</skip>
							</run>
							<build>
								<cleanup>true</cleanup>
								<tags>
									<tag>latest</tag>
									<tag>${project.docker.latesttagtimestamp.version}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
								<!-- A relative path is looked up in ${project.basedir}/src/main/docker 
									by default -->
								<dockerFile>logstash/Dockerfile</dockerFile>
							</build>
						</image>
						<image>
							<name>onap/clamp-dashboard-elasticsearch</name>
							<alias>onap-clamp-dashboard-elasticsearch</alias>
							<run>
								<skip>true</skip>
							</run>
							<build>
								<cleanup>true</cleanup>
								<tags>
									<tag>latest</tag>
									<tag>${project.docker.latesttagtimestamp.version}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
								<!-- A relative path is looked up in ${project.basedir}/src/main/docker 
									by default -->
								<dockerFile>elasticsearch/Dockerfile</dockerFile>
							</build>
						</image>
						<image>
							<name>onap/clamp-dashboard-kibana</name>
							<alias>onap-clamp-dashboard-kibana</alias>
							<run>
								<skip>true</skip>
							</run>
							<build>
								<cleanup>true</cleanup>
								<tags>
									<tag>latest</tag>
									<tag>${project.docker.latesttagtimestamp.version}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
								<!-- A relative path is looked up in ${project.basedir}/src/main/docker 
									by default -->
								<dockerFile>kibana/Dockerfile</dockerFile>
							</build>
						</image>
					</images>
				</configuration>

				<executions>
					<execution>
						<id>generate-images</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>push-images</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-start-for-it</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop-for-it</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>
			<plugin> 
				<groupId>org.codehaus.groovy.maven</groupId> 
				<artifactId>gmaven-plugin</artifactId> 
				<version>1.0</version> 
				<executions> 
					<execution> 
						<phase>validate</phase> 
						<goals> 
							<goal>execute</goal> 
						</goals> 
						<configuration> 
							<source>${project.basedir}/src/main/script/TagVersion.groovy</source> 
						</configuration> 
					</execution> 
				</executions> 
			</plugin>
		</plugins>
	</build>
</project>
